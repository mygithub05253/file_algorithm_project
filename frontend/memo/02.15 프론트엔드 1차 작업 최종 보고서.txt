02.15 프론트엔드 1차 작업 보고서

1. 표지화면

1-1. 프로젝트 코드 설명 및 기능 구현 상세 설명
- 표지화면에는 "문서 자동 분류 시스템" 제목과 로그인, 회원가입 버튼으로 구성
- 단순한 표지화면으로 구현(디자인은 수정 예정)
- 버튼을 클릭하면 각각 로그인 페이지와 회원가입 페이지로 이동

1-2. index.html 설명
1) 메인 화면 (.container)
- 제목: "📁 문서 자동 분류 시스템 📁" 표시.
- 버튼: "로그인", "회원가입" 버튼 추가.

2) 버튼 기능 (index.js에서 처리)
- loginBtn → 로그인 페이지 이동.
- signupBtn → 회원가입 페이지 이동.

1-3. index.css 설명
1) body 스타일링
- Flexbox를 사용해 화면 중앙 정렬.
- 배경색을 연한 회색으로 설정.

2) container 스타일링
- 테두리, 흰색 배경, 둥근 모서리, 그림자 효과 적용.

3) h1 (제목) 스타일
- 폰트 크기 키우기 + 굵게 설정.
- 여백 추가로 레이아웃 정리.

4) 버튼 스타일링
- buttons로 버튼 간격 정렬.
- 파란색 배경, 둥근 모서리 적용.
- hover시 색상 변경.


1-4. index.js 설명
1) DOMContentLoaded 이벤트
- HTML이 완전히 로드된 후 JavaScript 실행.

2) 회원가입 버튼 클릭 시 (signupBtn)
- "../html/signup.html" 페이지로 이동.

3) 로그인 버튼 클릭 시 (loginBtn)
- "../html/login.html" 페이지로 이동.

1-5 1차 기능 구현 보고서
- 버튼 클릭 시 해당 페이지로 이동하는 기능 구현

2. 기능 구현 화면

2-1. 프로젝트 코드 설명 및 기능 구현 상세 설명
- 폴더별 파일 분류 (교내, 업무, 개인)
- 파일 추가, 삭제, 이동, 수정, 다운로드 기능
- 파일을 추가하면 자동으로 카테고리에 맞춰 분류됨
- 파일 다운로드 시 ZIP 파일 또는 폴더로 정리 후 미리보기 기능
- 구글 드라이브 다운로드 방식 참고

2-2. system.html 설명
1) 구조
- 폴더 탭: 교내, 업무, 개인 등의 폴더를 선택할 수 있음
- 파일 목록: 특정 폴더의 파일들을 확인 가능
- 파일 업로드 영역: 사용자가 파일을 업로드할 수 있는 창
- 파일 관리 기능: 검색, 정렬, 삭제, 다운로드 기능 포함

2) 주요 기능
- <button> 요소를 이용하여 폴더 전환 버튼 구현
- <select> 드롭다운을 사용해 파일 정렬 방식 변경
- <input type="file">을 활용해 파일 업로드 기능 제공

2-3. system.css 설명
1) body 태그를 수정해 페이지 전체 스타일링
2) .tab을 통해 폴더 탭 스타일 수정
3) li 태그 수정 통해 파일 목록 스타일 수정
4) 주요 스타일
- display: flex를 활용하여 파일 리스트 UI를 깔끔하게 정렬
- .active 클래스를 사용해 선택된 폴더를 강조
- 버튼과 입력창은 사용자 친화적인 UI 디자인 적용

2-3. system.js 설명
1) 주요 기능
1-1) changeTab
- 폴더 전환 기능
- 사용자가 다른 폴더로 이동할 때, 현재 탭을 변경하는 기능
- currentTab 변수에 현재 선택된 폴더 저장 = default 지정
- 선택한 폴더가 강조되도록 css 수정

1-2) uploadFiles
- 파일 업로드 및 자동 분류
- 파일이 추가될 때 자동으로 카테고리에 따라 분류되는 기능
- 추후 알고리즘 추가하면 될 것 같음
- categorizeFile(file) 함수를 통해 자동으로 폴더 배정
- 사용자가 직접 폴더 지정 가능하도록 기능 구현 해놓음

1-3) categorizeFile
- 파일 자동 분류 알고리즘
- 파일명을 기반으로 파일을 자동으로 분류하는 로직 기초 구현
- 추후 수정 권장

1-4) downloadFile
- 파일 다운로드
- 파일을 선택해 다운로드하는 기능
- 현재는 단순히 alert로 처리, 추후 서버 기능과 연동을 통해 구현 필요
- zip 파일 다운로드 기능은 백엔드와 연동해 함께 구현 예정

1-5) searchFiles
- 파일 검색
- 사용자가 입력한 키워드로 파일을 검색하는 기능
- 검색어가 파일명에 포함되면 해당 파일만 화면에 표시
- display: none을 통해 검색 결과 필터링

2-4. 1차 기능 구현 보고서
- 파일을 자동으로 카테고리별로 분류하고, 다운로드 및 관리 기능을 제공하는 시스템 구현
- 추후 파일 이동 관련 기능 구현 예정
- 다운로드는 구글 드라이브의 다운로드 방식 참고해서 구현 목표
- 주요 기능
	- 파일 자동 분류 : 파일명을 분석하여 교내, 업무, 개인 폴더로 자동 정리
	- 파일은 추후 추가 가능
	- 파일 업로드 : 사용자가 직접 폴더를 선택하여 파일 추가 가능
	- 검색 기능 : 키워드를 입력함녀 관련 파일만 필터링
	- 다운로드 기능 : zip 파일 다운로드 및 미리보기 기능 제공 예정
	- UI 디자인 : GPT를 활용해 직관적인 폴더 관리 인터페이스 구현
- 향후 구현 및 개선 사항
	- zip 다운로드 기능 추가
	- 파일 미리보기 구현
	- 서버 기반 파일 저장 및 관리 기능 확장

3. 계정가입화면

3-1.  프로젝트 코드 설명 및 기능 구현 상세 설명
- 이메일 및 SMS 인증 기능 구현(추후 서버 연동 필요)
- 비밀번호 확인 및 일치 여부 검증
- 비밀번호 입력시 *표시
- 비밀번호 입력란에 *와 사용자 입력글자 확인 가능한 아이콘 추가
- 비밀번호 입력란에 붙여넣기 방지 기능

3-2. signup.html 설명
1) 구조
- container: 회원가입 폼을 담고 있는 div 요소
- form: 이메일, ID, 비밀번호, 전화번호 입력 필드와 인증 관련 버튼
- social-login: Google, Naver, Kakao 소셜 로그인 버튼

2) 주요기능
- <input> 요소를 사용해 이메일, 비밀번호, 전화번호 등의 입력 받음
- <button> 요소로 이메일 인증, 문자 인증, 회원가입 버튼 구현

3-3. signup.css
1) 전체 페이지 레이아웃을 display: flex로 중앙 정렬
2) container 클래스에서 회원가입 폼을 감싸며, 적당한 패딩 및 그림자 효과 적용
3) .info-box로 이메일 안내 문구를 스타일링
4) 버튼은 각 기능에 맞춰 다른 색상으로 구분
-이메일, 문자 인증 버튼은 파란색 (#3498db)
-회원가입 버튼은 초록색 (#2ecc71)

3-4. signup.js
1)emailVerify
- 사용자가 이메일 입력 후 "이메일 인증" 버튼을 클릭하면
(실제 이메일 전송은 구현되어 있지 않지만) 이메일 인증 코드가 전송되었다고 알림을 띄움.\

2)setupPasswordToggle
- 비밀번호 입력란에 대한 눈 모양 버튼을 추가해 비밀번호를 표시하거나 숨김.
- 기본적으로 입력 필드 타입은 password(*)로 설정
- 버튼을 클릭할 때마다 password 타입과 text 타입이 번갈아가며 전환
- 눈 모양과 눈 감긴 모양의 아이콘을 번갈아가며 표시

3)smsVerify
- 전화번호가 숫자로만 이루어져 있고 11자리인지 확인
- 형식이 맞지 않으면 안내 메시지를 띄우고 인증 절차를 중단
- 올바른 전화번호일 경우, SMS 인증 코드가 전송되었다고 알림을 띄움.

4)signupForm
- 폼이 제출되기 전에 preventDefault()로 기본 폼 제출 차단
- 입력한 데이터의 유효성을 검증하고 처리함.
- 검증 후 login.html로 이동

3-5. 1차 기능 구현 보고서
- 입력된 비밀번호와 비밀번호 확인란에 입력된 비밀번호 검증 시스템 구현
	- 불일치시 에러메시지 출력
- 비밀번호 입력란에 password(*)과 text타입으로 나누고 눈 아이콘 클릭시 서로 변환 가능하게 구현
- 이메일과 SMS인증 문구 출력기능(향후 서버와 연동하여 실제로 이메일과 SMS인증번호 발송 기능 구현)

- 향후 구현 및 개선 사항
	- 서버와 연동하여 더미계정이 아닌 실제 사용자 계정이 저장되도록 구현
	- 구글, 네이버, 카카오의 소셜계정 로그인 기능 추가

4. 로그인화면

4-1. 프로젝트 코드 설명 및 기능 구현 상세 설명
- 입력한 아이디와 비밀번호 검증
- 일치하면 index.html(표지)로 이동
- 불일치시 오류메시지 표시

4-2. login.html
1) 구조
아이디 입력란: 아이디를 입력하는 곳
비밀번호 입력 필드: 비밀번호를 입력하는 곳
로그인 버튼: 아이디, 비밀번호 확인 후 index.html(표지)로 이동

2) 주요기능
- <button> 요소 이용하여 로그인화면 전환 기능 구현
- <form>을 이용하여 데이터 입력받고 데이터 검증 기능

4-3. login.css
1)body 태그를 수정하여 전체 페이지 스타일링
- display: flex, justify-content: center, align-items: center 속성을 사용하여 화면 중앙에 컨텐츠를 배치
2) .container 클래스를 이용하여 로그인 폼 영역 스타일 수정
- div의 크기, 배경색, 그림자 등을 설정하여 사용자가 편안하게 로그인할 수 있는 환경 제공
- border-radius를 사용해 둥근 모서리 효과와 box-shadow를 통해 입체적인 느낌 추가
3) 입력란 및 버튼 스타일 수정
- input과 button 요소에 동일한 패딩과 경계를 적용하여 일관성 있는 디자인 제공
- button 요소에는 background-color로 기본 색상 설정 및 hover 효과를 적용하여 클릭 시 강조 효과 부여
4) 주요 스타일
- display: flex와 height: 100vh를 사용하여 화면 중앙에 배치
- input과 button에 width: 100%와 padding을 적용하여 사용자가 입력할 때 편리하고 직관적인 UI 제공
- .error 클래스를 사용하여 에러 메시지를 빨간색으로 표시

4-4. login.js
1-1) 로그인 폼 제출 처리
- 사용자가 로그인 폼을 제출할 때, 페이지 새로고침을 방지하고 입력된 아이디와 비밀번호를 검증
- 폼 제출 시 event.preventDefault()를 통해 기본 제출 동작을 차단
- 아이디와 비밀번호가 올바른지 확인하고, 잘못된 경우 에러 메시지 표시

1-2) 아이디 및 비밀번호 검증
- 사용자가 입력한 아이디(username)와 비밀번호(password)가 더미 사용자 정보와 일치하는지 검증
- 예시 계정과 일치할 경우, 로그인 성공 메시지를 표시하고 index.html(표지)로 페이지를 이동
- 일치하지 않으면 에러 메시지를 표시하여 사용자에게 알림

1-3) 에러 메시지 표시
- 아이디나 비밀번호가 틀릴 경우, #errorMessage에 설정된 에러 메시지를 표시
- errorMessage.classList.remove("hidden");로 숨겨져 있는 에러 메시지를 표시

1-4) 로그인 성공 후 페이지 이동
- 로그인 성공 시 window.location.href = "index.html";로 index.html 페이지로 이동

4-5. 1차 기능 구현 보고서
- 로그인시 아이디와 비밀번호 검증 시스템 구현
- 불일치시 에러메시지 출력

- 향후 구현 및 개선 사항
	- 서버와 연동하여 더미계정이 아닌 실제 사용자 계정과 검증하도록 구현
	- 구글, 네이버, 카카오의 소셜계정 로그인 기능 추가

5. 1차 작업 보고서에 대한 최종 피드백
우선적으로 폴더 구조가 너무 복잡합니다.
현재는 다수의 인원이 개발의 편의를 위해 폴더 구조를 이렇게 하셨다 생각하겠습니다.
이런 경우 추후 백앤드 작업 후 데이터베이스까지 연동하면서 페이지 이동 link를 걸었을 때 경로 설정에서 상당히 복잡하고 추가적인 시간을 소요할 수 있습니다.
현재까지의 개발 상황은 크게 문제 없습니다.

앞으로에 개발에서 제일 우선적으로 요구되는 것은 두 가지입니다.
1. 페이지 간 이동이 원활하게 가능하도록 웹페이지 상단에 이동용 bar가 있으면 좋겠습니다.
2. 파일 등록하는 작업화면 버튼에서 파일을 등록 시 왼쪽에 파일이 보이는 칸에 추가되도록 js 작업을 우선적으로 해주시면 좋겠습니다.
3. 지금은 분류에 대한 카테고리가 임의적으로 사전에 정의되어 있지만 사용자가 직접 생성, 제거 및 수정이 가능하도록 제작 부탁드립니다.

이상으로 피드백을 마무리하며 프론드 개발자분들 너무 수고하셨습니다! 이후에도 진행상황을 공유 부탁드리며 전체 단톡방에도 꼭 올려주세요