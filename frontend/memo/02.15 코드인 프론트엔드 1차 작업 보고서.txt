2. 기능 구현 화면

2-1. 프로젝트 코드 설명 및 기능 구현 상세 설명
- 폴더별 파일 분류 (교내, 업무, 개인)
- 파일 추가, 삭제, 이동, 수정, 다운로드 기능
- 파일을 추가하면 자동으로 카테고리에 맞춰 분류됨
- 파일 다운로드 시 ZIP 파일 또는 폴더로 정리 후 미리보기 기능
- 구글 드라이브 다운로드 방식 참고

2-2. system.html 설명
1) 구조
- 폴더 탭: 교내, 업무, 개인 등의 폴더를 선택할 수 있음
- 파일 목록: 특정 폴더의 파일들을 확인 가능
- 파일 업로드 영역: 사용자가 파일을 업로드할 수 있는 창
- 파일 관리 기능: 검색, 정렬, 삭제, 다운로드 기능 포함

2) 주요 기능
- <button> 요소를 이용하여 폴더 전환 버튼 구현
- <select> 드롭다운을 사용해 파일 정렬 방식 변경
- <input type="file">을 활용해 파일 업로드 기능 제공

2-3. system.css 설명
1) body 태그를 수정해 페이지 전체 스타일링
2) .tab을 통해 폴더 탭 스타일 수정
3) li 태그 수정 통해 파일 목록 스타일 수정
4) 주요 스타일
- display: flex를 활용하여 파일 리스트 UI를 깔끔하게 정렬
- .active 클래스를 사용해 선택된 폴더를 강조
- 버튼과 입력창은 사용자 친화적인 UI 디자인 적용

2-3. system.js 설명
1) 주요 기능
1-1) changeTab
- 폴더 전환 기능
- 사용자가 다른 폴더로 이동할 때, 현재 탭을 변경하는 기능
- currentTab 변수에 현재 선택된 폴더 저장 = default 지정
- 선택한 폴더가 강조되도록 css 수정

1-2) uploadFiles
- 파일 업로드 및 자동 분류
- 파일이 추가될 때 자동으로 카테고리에 따라 분류되는 기능
- 추후 알고리즘 추가하면 될 것 같음
- categorizeFile(file) 함수를 통해 자동으로 폴더 배정
- 사용자가 직접 폴더 지정 가능하도록 기능 구현 해놓음

1-3) categorizeFile
- 파일 자동 분류 알고리즘
- 파일명을 기반으로 파일을 자동으로 분류하는 로직 기초 구현
- 추후 수정 권장

1-4) downloadFile
- 파일 다운로드
- 파일을 선택해 다운로드하는 기능
- 현재는 단순히 alert로 처리, 추후 서버 기능과 연동을 통해 구현 필요
- zip 파일 다운로드 기능은 백엔드와 연동해 함께 구현 예정

1-5) searchFiles
- 파일 검색
- 사용자가 입력한 키워드로 파일을 검색하는 기능
- 검색어가 파일명에 포함되면 해당 파일만 화면에 표시
- display: none을 통해 검색 결과 필터링

2-4. 1차 기능 구현 보고서
- 파일을 자동으로 카테고리별로 분류하고, 다운로드 및 관리 기능을 제공하는 시스템 구현
- 추후 파일 이동 관련 기능 구현 예정
- 다운로드는 구글 드라이브의 다운로드 방식 참고해서 구현 목표
- 주요 기능
	- 파일 자동 분류 : 파일명을 분석하여 교내, 업무, 개인 폴더로 자동 정리
	- 파일은 추후 추가 가능
	- 파일 업로드 : 사용자가 직접 폴더를 선택하여 파일 추가 가능
	- 검색 기능 : 키워드를 입력함녀 관련 파일만 필터링
	- 다운로드 기능 : zip 파일 다운로드 및 미리보기 기능 제공 예정
	- UI 디자인 : GPT를 활용해 직관적인 폴더 관리 인터페이스 구현
- 향후 구현 및 개선 사항
	- zip 다운로드 기능 추가
	- 파일 미리보기 구현
	- 서버 기반 파일 저장 및 관리 기능 확장